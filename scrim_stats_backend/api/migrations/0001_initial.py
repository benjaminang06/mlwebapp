# Generated by Django 5.1.5 on 2025-02-26 07:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Player",
            fields=[
                ("player_id", models.AutoField(primary_key=True, serialize=False)),
                ("current_ign", models.CharField(max_length=100)),
                (
                    "primary_role",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("profile_image_url", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ScrimGroup",
            fields=[
                ("scrim_group_id", models.AutoField(primary_key=True, serialize=False)),
                ("scrim_group_name", models.CharField(max_length=200)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                ("match_id", models.AutoField(primary_key=True, serialize=False)),
                ("match_date_time", models.DateTimeField()),
                ("scrim_type", models.CharField(max_length=50)),
                ("match_outcome", models.CharField(max_length=10)),
                ("score_details", models.JSONField(blank=True, null=True)),
                ("general_notes", models.TextField(blank=True, null=True)),
                ("game_number", models.IntegerField()),
                ("team_side", models.CharField(max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "submitted_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "scrim_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches",
                        to="api.scrimgroup",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FileUpload",
            fields=[
                ("file_id", models.AutoField(primary_key=True, serialize=False)),
                ("file_url", models.URLField()),
                ("file_type", models.CharField(max_length=20)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="api.match",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerAlias",
            fields=[
                ("alias_id", models.AutoField(primary_key=True, serialize=False)),
                ("alias", models.CharField(max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="aliases",
                        to="api.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                ("team_id", models.AutoField(primary_key=True, serialize=False)),
                ("team_name", models.CharField(max_length=100)),
                ("team_abbreviation", models.CharField(max_length=10)),
                ("team_category", models.CharField(max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "managers",
                    models.ManyToManyField(
                        related_name="managed_teams", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerTeamHistory",
            fields=[
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("joined_date", models.DateField()),
                ("left_date", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_history",
                        to="api.player",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.team"
                    ),
                ),
            ],
            options={
                "ordering": ["-joined_date"],
            },
        ),
        migrations.CreateModel(
            name="PlayerMatchStat",
            fields=[
                ("stats_id", models.AutoField(primary_key=True, serialize=False)),
                ("role_played", models.CharField(max_length=20)),
                ("hero_played", models.CharField(max_length=50)),
                ("kills", models.IntegerField()),
                ("deaths", models.IntegerField()),
                ("assists", models.IntegerField()),
                ("computed_kda", models.FloatField()),
                ("damage_dealt", models.IntegerField(blank=True, null=True)),
                ("damage_taken", models.IntegerField(blank=True, null=True)),
                ("turret_damage", models.IntegerField(blank=True, null=True)),
                ("teamfight_participation", models.FloatField(blank=True, null=True)),
                ("gold_earned", models.IntegerField(blank=True, null=True)),
                ("player_notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_stats",
                        to="api.match",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="match_stats",
                        to="api.player",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="match_stats",
                        to="api.team",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="player",
            name="teams",
            field=models.ManyToManyField(
                related_name="players", through="api.PlayerTeamHistory", to="api.team"
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="opponent_team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="away_matches",
                to="api.team",
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="our_team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="home_matches",
                to="api.team",
            ),
        ),
        migrations.CreateModel(
            name="PlayerRoleStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.CharField(max_length=20)),
                ("matches_played", models.IntegerField(default=0)),
                ("total_kills", models.IntegerField(default=0)),
                ("total_deaths", models.IntegerField(default=0)),
                ("total_assists", models.IntegerField(default=0)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="role_stats",
                        to="api.player",
                    ),
                ),
            ],
            options={
                "unique_together": {("player", "role")},
            },
        ),
        migrations.CreateModel(
            name="HeroPairingStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hero1", models.CharField(max_length=50)),
                ("hero2", models.CharField(max_length=50)),
                ("matches_played", models.IntegerField(default=0)),
                ("matches_won", models.IntegerField(default=0)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hero_pairings",
                        to="api.team",
                    ),
                ),
            ],
            options={
                "unique_together": {("hero1", "hero2", "team")},
            },
        ),
        migrations.CreateModel(
            name="TeamManagerRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("head_coach", "Head Coach"),
                            ("assistant", "Assistant Coach"),
                            ("analyst", "Analyst"),
                            ("viewer", "Viewer"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="manager_roles",
                        to="api.team",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_roles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("team", "user")},
            },
        ),
    ]
